steps:
  - name: 'golang:1.14.4-alpine3.12'
    id: Test
    entrypoint: /bin/sh
    args:
      - -c
      - 'go test ./...'
    env: ["CGO_ENABLED=0"]

  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/juicypy/todolist:$SHORT_SHA'
      - '.'

  - name: 'gcr.io/cloud-builders/docker'
    id: Push
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/juicypy/todolist:$SHORT_SHA'

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Clone env repository
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        gcloud source repos clone backend-env && \
        cd backend-env && \
        git checkout candidate && \
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Generate manifest
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        sed "s/PROJECT_ID/${PROJECT_ID}/g" .ci/kubernetes_tpl.yaml > backend-env/kubernetes.yaml
        sed "s/COMMIT_SHA/${SHORT_SHA}/g" .ci/kubernetes_tpl.yaml > backend-env/kubernetes.yaml

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Push manifest
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        set -x && \
        cd backend-env && \
        git add kubernetes.yaml && \
        git commit -m "Deploying image gcr.io/${PROJECT_ID}/juicypy/todolist:${SHORT_SHA}
        Built from commit ${COMMIT_SHA} of repository backend
        Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
        git push origin candidate